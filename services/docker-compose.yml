services:
  nginx:
    build: ./nginx
    container_name: nginx
    networks:
      - celchannel
    image: nginx
    ports:
      - "443:443"
    volumes:
      - website_nginx:/home/www:ro
    restart: on-failure
  node:
    build: ./node
    container_name: node
    networks:
      - celchannel
      - db
    image: node
    volumes:
      - backend:/app
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: on-failure
  postgresql:
    container_name: postgresql
    image: postgres:17.0-alpine3.19
    restart: on-failure
    networks:
      - db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - postgresql_db:/var/lib/postgresql/data
      - postgresql_init:/docker-entrypoint-initdb.d/:ro
networks:
  celchannel:
  db:

volumes:
  website_nginx:
    driver_opts:
      type: none
      o: bind
      device: '${PWD}/website/'
  backend:
    driver_opts:
      type: none
      o: bind
      device: '${PWD}/backend/'
  postgresql_init:
    driver_opts:
      type: none
      o: bind
      device: '${PWD}/services/postgresql_init/'
  postgresql_db:
    driver_opts:
      type: none
      o: bind
      device: '${HOME}/celchannel/db/'
  postgresql_logs:
    driver_opts:
      type: none
      o: bind
      device: '${HOME}/celchannel/logs/'
